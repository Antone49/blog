version: '3'

services:

  broker-service:
    build:
      context: ./../back-end/broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  post-service:
    build:
      context: ./../back-end/post-service
      dockerfile: ./post-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=blog sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    build:
      context: ./../back-end/logger-service
      dockerfile: ./logger-service.dockerfile
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ./../back-end/mail-service
      dockerfile: ./mail-service.dockerfile
    restart: always
    ports:
      - "8083:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: "john.smith@example.com"

  authentication-service:
    build:
      context: ./../back-end/authentication-service
      dockerfile: ./authentication-service.dockerfile
    restart: always
    ports:
      - "8084:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=blog sslmode=disable timezone=UTC connect_timeout=5"

  image-service:
    build:
      context: ./../back-end/image-service
      dockerfile: ./image-service.dockerfile
    volumes:
    -  volume_image:/usr/src/images
    restart: always
    ports:
      - "8085:80"
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blog
    volumes:
      - ./db/data/postgres/:/var/lib/postgresql/data/
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db/data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  nginx:
    image: 'nginx:latest'
    volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf
    -  volume_image:/usr/src/images
    ports:
    - "8800:80"

volumes:
  volume_image:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../images